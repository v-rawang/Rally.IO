using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Rally.Framework.Instrument
{
    public class ModuleConfiguration
    {
        //public static string SQL_CMD_InsertInstrument = "INSERT INTO instruments (Name, Alias, Type, Model, SerialNumber, Manufacturer, Brand, SKU, WarrantyPeriod, ShipmentDate, PurchaseDate, Remarks) VALUES (@Name, @Alias, @Type, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @WarrantyPeriod, @ShipmentDate, @PurchaseDate, @Remarks);";
        //public static string SQL_CMD_UpdateInstrument = "UPDATE instruments SET Name = @Name, Alias = @Alias, Type = @Type, Model = @Model, SerialNumber = @SerialNumber, Manufacturer = @Manufacturer, Brand = @Brand, SKU = @SKU, WarrantyPeriod = @WarrantyPeriod, ShipmentDate = @ShipmentDate, PurchaseDate =@PurchaseDate, Remarks = @Remarks WHERE ID = @ID;";
        //public static string SQL_CMD_UpdateInstrumentInstallation = "UPDATE instruments SET Latitude = @Latitude, Longitude = @Longitude, Location = @Location, InstallationDate = @InstallationDate, AcceptanceDate = @AcceptanceDate WHERE ID = @ID;";
        //public static string SQL_CMD_UpdateInstrumentDistribution = "UPDATE instruments SET Organization = @Organization, Department = @Department, WorkGroup = @WorkGroup WHERE ID = @ID;";
        //public static string SQL_CMD_DeleteInstrument = "DELETE FROM instruments WHERE ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentBasicById = "SELECT ID, Name, Alias, Type, Model, SerialNumber, Manufacturer, Brand, SKU, WarrantyPeriod, ShipmentDate, PurchaseDate, Remarks FROM instruments WHERE ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentById = "SELECT ID, Name, Alias, Type, Model, SerialNumber, Manufacturer, Brand, SKU, Latitude, Longitude, Location, WarrantyPeriod, ShipmentDate, PurchaseDate, InstallationDate, AcceptanceDate, Organization, Department, WorkGroup, Remarks FROM instruments WHERE ID = @ID;";
        //public static string SQL_CMD_InsertInstrumentCommunicationSetting = "INSERT INTO instrument_commnunication_settings (InstrumentID, Type, IpAddress, PortNumber, SerialPortName, SerialPortBaudRate, BluetoothDeviceName, BluetoothAddress, BluetoothKey) VALUES (@InstrumentID, @Type, @IpAddress, @PortNumber, @SerialPortName, @SerialPortBaudRate, @BluetoothDeviceName, @BluetoothAddress, @BluetoothKey);";
        //public static string SQL_CMD_UpdateInstrumentCommunicationSetting = "UPDATE instrument_commnunication_settings SET InstrumentID = @InstrumentID, Type = @Type, IpAddress = @IpAddress, PortNumber = @PortNumber, SerialPortName = @SerialPortName, SerialPortBaudRate = @SerialPortBaudRate, BluetoothDeviceName = @BluetoothDeviceName, BluetoothAddress = @BluetoothAddress, BluetoothKey = @BluetoothKey WHERE ID = @ID;";
        //public static string SQL_CMD_DeleteInstrumentCommunicationSetting = "DELETE FROM instrument_commnunication_settings WHERE ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentCommunicationSettingById = "SELECT ID, InstrumentID, Type, IpAddress, PortNumber, SerialPortName, SerialPortBaudRate, BluetoothDeviceName, BluetoothAddress, BluetoothKey, Remarks FROM instrument_commnunication_settings WHERE InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_InsertInstrumentCameraSetting = "INSERT INTO instrument_camera_settings (InstrumentID, CameraType, ConnectionType, Model, SerialNumber, Manufacturer, Brand, SKU, IpAddress, PortNumber, LoginName, Password, AssemblyName, AssemblyPath, ClassName, Version) VALUES (@InstrumentID, @CameraType, @ConnectionType, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @IpAddress, @PortNumber, @LoginName, @Password, @AssemblyName, @AssemblyPath, @ClassName, @Version);";
        //public static string SQL_CMD_UpdateInstrumentCameraSetting = "UPDATE instrument_camera_settings SET InstrumentID = @InstrumentID, CameraType = @CameraType, ConnectionType = @ConnectionType, Model = @Model, SerialNumber = @SerialNumber, Manufacturer = @Manufacturer, Brand = @Brand, SKU = @SKU, IpAddress = @IpAddress, PortNumber = @PortNumber, LoginName = @LoginName, Password = @Password, AssemblyName = @AssemblyName, AssemblyPath = @AssemblyPath, ClassName = @ClassName, Version = @Version WHERE ID = @ID;";
        //public static string SQL_CMD_DeleteInstrumentCameraSetting = "DELETE FROM instrument_camera_settings WHERE ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentCameraSettingById = "SELECT ID, InstrumentID, CameraType, ConnectionType, Model, SerialNumber, Manufacturer, Brand, SKU, IpAddress, PortNumber, LoginName, Password, AssemblyName, AssemblyPath, ClassName, Version, Remarks FROM instrument_camera_settings WHERE InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_SelectMaxInstrumentID = "SELECT MAX(ID) FROM instruments";
        //public static string SQL_CMD_SelectMaxInstrumentCommunicationSettingID = "SELECT MAX(ID) FROM instrument_commnunication_settings";
        //public static string SQL_CMD_SelectMaxInstrumentCameraSettingID = "SELECT MAX(ID) FROM instrument_camera_settings";
        //public static string SQL_CMD_SelectInstruments = "SELECT ID, Name, Alias, Type, Model, SerialNumber, Manufacturer, Brand, SKU, Latitude, Longitude, Location, WarrantyPeriod, ShipmentDate, PurchaseDate, InstallationDate, AcceptanceDate, Organization, Department, WorkGroup, Remarks FROM instruments";
        //public static string SQL_CMD_SelectDateTableInstrumentCamera = "SELECT ID,Name,SerialNumber FROM instruments";
        //public static string SQL_CMD_DeleteInstrumentCamera = "DELETE FROM instrument_camera_settings WHERE InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_DeleteInstrumentCommunication = "DELETE FROM instrument_commnunication_settings WHERE InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_SelectInstrumentCountByName = "SELECT COUNT(*) FROM instruments WHERE Name = @Name AND ID != @ID";

        //public static string SQL_CMD_InsertInstrument = "INSERT INTO tb_mon_instruments (Ins_Name, Ins_Alias, Ins_Type, Ins_Model, Ins_SerialNumber, Ins_Manufacturer, Ins_Brand, Ins_SKU, Ins_WarrantyPeriod, Ins_ShipmentDate, Ins_PurchaseDate, Ins_Remarks) VALUES (@Name, @Alias, @Type, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @WarrantyPeriod, @ShipmentDate, @PurchaseDate, @Remarks);";
        //public static string SQL_CMD_UpdateInstrument = "UPDATE tb_mon_instruments SET Ins_Name = @Name, Ins_Alias = @Alias, Ins_Type = @Type, Ins_Model = @Model, Ins_SerialNumber = @SerialNumber, Ins_Manufacturer = @Manufacturer, Ins_Brand = @Brand, Ins_SKU = @SKU, Ins_WarrantyPeriod = @WarrantyPeriod, Ins_ShipmentDate = @ShipmentDate, Ins_PurchaseDate =@PurchaseDate, Ins_Remarks = @Remarks WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_UpdateInstrumentInstallation = "UPDATE tb_mon_instruments SET Ins_Latitude = @Latitude, Ins_Longitude = @Longitude, Ins_Location = @Location, Ins_InstallationDate = @InstallationDate, Ins_AcceptanceDate = @AcceptanceDate WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_UpdateInstrumentDistribution = "UPDATE tb_mon_instruments SET Ins_Organization = @Organization, Ins_Department = @Department, Ins_WorkGroup = @WorkGroup WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_DeleteInstrument = "DELETE FROM tb_mon_instruments WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentBasicById = "SELECT Ins_ID as ID, Ins_Name as Name, Ins_Alias as Alias, Ins_Type as Type, Ins_Model as Model, Ins_SerialNumber as SerialNumber, Ins_Manufacturer as Manufacturer, Ins_Brand as Brand, Ins_SKU as SKU, Ins_WarrantyPeriod as WarrantyPeriod, Ins_ShipmentDate as ShipmentDate, Ins_PurchaseDate as PurchaseDate, Ins_Remarks as Remarks FROM tb_mon_instruments WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentById = "SELECT Ins_ID as ID, Ins_Name as Name, Ins_Alias as Alias, Ins_Type as Type, Ins_Model as Model, Ins_SerialNumber as SerialNumber, Ins_Manufacturer as Manufacturer, Ins_Brand as Brand, Ins_SKU as SKU, Ins_Latitude as Latitude, Ins_Longitude as Longitude, Ins_Location as Location, Ins_WarrantyPeriod as WarrantyPeriod, Ins_ShipmentDate as ShipmentDate, Ins_PurchaseDate as PurchaseDate, Ins_InstallationDate as InstallationDate, Ins_AcceptanceDate as AcceptanceDate, Ins_Organization as Organization, Ins_Department as Department, Ins_WorkGroup as WorkGroup, Ins_Remarks as Remarks FROM tb_mon_instruments WHERE Ins_ID = @ID;";
        //public static string SQL_CMD_InsertInstrumentCommunicationSetting = "INSERT INTO tb_mon_InstrumentCommnunicationSettings (Ins_InstrumentID, ics_Type, ics_IpAddress, ics_PortNumber, ics_SerialPortName, ics_SerialPortBaudRate, ics_BluetoothDeviceName, ics_BluetoothAddress, ics_BluetoothKey, ics_Protocol, ics_AssemblyName, ics_AssemblyPath, ics_ClassName, ics_Version) VALUES (@InstrumentID, @Type, @IpAddress, @PortNumber, @SerialPortName, @SerialPortBaudRate, @BluetoothDeviceName, @BluetoothAddress, @BluetoothKey, @Protocol, @AssemblyName, @AssemblyPath, @ClassName, @Version);";
        //public static string SQL_CMD_UpdateInstrumentCommunicationSetting = "UPDATE tb_mon_InstrumentCommnunicationSettings SET ics_Type = @Type, ics_IpAddress = @IpAddress, ics_PortNumber = @PortNumber, ics_SerialPortName = @SerialPortName, ics_SerialPortBaudRate = @SerialPortBaudRate, ics_BluetoothDeviceName = @BluetoothDeviceName, ics_BluetoothAddress = @BluetoothAddress, ics_BluetoothKey = @BluetoothKey, ics_Protocol = @Protocol, ics_AssemblyName = @AssemblyName, ics_AssemblyPath = @AssemblyPath, ics_ClassName = @ClassName, ics_Version = @Version WHERE Ins_InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_DeleteInstrumentCommunicationSetting = "DELETE FROM tb_mon_InstrumentCommnunicationSettings WHERE ics_ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentCommunicationSettingById = "SELECT ics_ID as ID, Ins_InstrumentID as InstrumentID, ics_Type as Type, ics_IpAddress as IpAddress, ics_PortNumber as PortNumber, ics_SerialPortName as SerialPortName, ics_SerialPortBaudRate as SerialPortBaudRate, ics_BluetoothDeviceName as BluetoothDeviceName, ics_BluetoothAddress as BluetoothAddress, ics_BluetoothKey as BluetoothKey, ics_Protocol as Protocol, ics_AssemblyName as AssemblyName, ics_AssemblyPath as AssemblyPath, ics_ClassName as ClassName, ics_Version as Version, ics_Remarks as Remarks FROM tb_mon_InstrumentCommnunicationSettings WHERE Ins_InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_InsertInstrumentCameraSetting = "INSERT INTO tb_mon_InstrumentCameraSettings (Ins_InstrumentID, ics_CameraType, ics_ConnectionType, ics_Model, ics_SerialNumber, ics_Manufacturer, ics_Brand, ics_SKU, ics_IpAddress, ics_PortNumber, ics_LoginName, ics_Password, ics_AssemblyName, ics_AssemblyPath, ics_ClassName, ics_Version,ics_order) VALUES (@InstrumentID, @CameraType, @ConnectionType, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @IpAddress, @PortNumber, @LoginName, @Password, @AssemblyName, @AssemblyPath, @ClassName, @Version,@order);";
        //public static string SQL_CMD_UpdateInstrumentCameraSetting = "UPDATE tb_mon_InstrumentCameraSettings SET ics_CameraType = @CameraType, ics_ConnectionType = @ConnectionType, ics_Model = @Model, ics_SerialNumber = @SerialNumber, ics_Manufacturer = @Manufacturer, ics_Brand = @Brand, ics_SKU = @SKU, ics_IpAddress = @IpAddress, ics_PortNumber = @PortNumber, ics_LoginName = @LoginName, ics_Password = @Password, ics_AssemblyName = @AssemblyName, ics_AssemblyPath = @AssemblyPath, ics_ClassName = @ClassName, ics_Version = @Version,ics_order = @order WHERE Ins_InstrumentID = @InstrumentID AND ics_order = @order;";
        //public static string SQL_CMD_DeleteInstrumentCameraSetting = "DELETE FROM tb_mon_InstrumentCameraSettings WHERE ics_ID = @ID;";
        //public static string SQL_CMD_SelectInstrumentCameraSettingById = "SELECT ics_ID as ID, Ins_InstrumentID as InstrumentID, ics_CameraType as CameraType, ics_ConnectionType as ConnectionType, ics_Model as Model, ics_SerialNumber as SerialNumber, ics_Manufacturer as Manufacturer, ics_Brand as Brand, ics_SKU as SKU, ics_IpAddress as IpAddress, ics_PortNumber as PortNumber, ics_LoginName as LoginName, ics_Password as Password, ics_AssemblyName as AssemblyName, ics_AssemblyPath as AssemblyPath, ics_ClassName as ClassName, ics_Version as Version, ics_Remarks as Remarks, ics_order as 'order' FROM tb_mon_InstrumentCameraSettings WHERE Ins_InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_SelectMaxInstrumentID = "SELECT MAX(Ins_ID) FROM tb_mon_instruments";
        //public static string SQL_CMD_SelectMaxInstrumentCommunicationSettingID = "SELECT MAX(ics_ID) FROM tb_mon_InstrumentCommnunicationSettings";
        //public static string SQL_CMD_SelectMaxInstrumentCameraSettingID = "SELECT MAX(ics_ID) FROM tb_mon_InstrumentCameraSettings";
        //public static string SQL_CMD_SelectInstruments = "SELECT Ins_ID as ID, Ins_Name as Name, Ins_Alias as Alias, Ins_Type as Type, Ins_Model as Model, Ins_SerialNumber as SerialNumber, Ins_Manufacturer as Manufacturer, Ins_Brand as Brand, Ins_SKU as SKU, Ins_Latitude as Latitude, Ins_Longitude as Longitude, Ins_Location as Location, Ins_WarrantyPeriod as WarrantyPeriod, Ins_ShipmentDate as ShipmentDate, Ins_PurchaseDate as PurchaseDate, Ins_InstallationDate as InstallationDate, Ins_AcceptanceDate as AcceptanceDate, Ins_Organization as Organization, Ins_Department as Department, Ins_WorkGroup as WorkGroup, Ins_Remarks as Remarks FROM tb_mon_instruments";
        //public static string SQL_CMD_SelectDateTableInstrumentCamera = "SELECT Ins_ID as ID,Ins_Name as Name,Ins_SerialNumber as SerialNumber FROM tb_mon_instruments";
        //public static string SQL_CMD_DeleteInstrumentCamera = "DELETE FROM tb_mon_InstrumentCameraSettings WHERE Ins_InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_DeleteInstrumentCommunication = "DELETE FROM tb_mon_InstrumentCommnunicationSettings WHERE Ins_InstrumentID = @InstrumentID;";
        //public static string SQL_CMD_SelectInstrumentCountByName = "SELECT COUNT(*) FROM tb_mon_instruments WHERE Ins_Name = @Name AND Ins_ID != @ID";
        //public static string SQL_CMD_SelectInstrumentCameraSettingById1 = "SELECT ics_ID as ID, Ins_InstrumentID as InstrumentID, ics_CameraType as CameraType, ics_ConnectionType as ConnectionType, ics_Model as Model, ics_SerialNumber as SerialNumber, ics_Manufacturer as Manufacturer, ics_Brand as Brand, ics_SKU as SKU, ics_IpAddress as IpAddress, ics_PortNumber as PortNumber, ics_LoginName as LoginName, ics_Password as Password, ics_AssemblyName as AssemblyName, ics_AssemblyPath as AssemblyPath, ics_ClassName as ClassName, ics_Version as Version, ics_Remarks as Remarks ,ics_order as 'order' FROM tb_mon_InstrumentCameraSettings WHERE Ins_InstrumentID = @InstrumentID AND ics_order = 1;";
        //public static string SQL_CMD_SelectInstrumentCameraSettingById2 = "SELECT ics_ID as ID, Ins_InstrumentID as InstrumentID, ics_CameraType as CameraType, ics_ConnectionType as ConnectionType, ics_Model as Model, ics_SerialNumber as SerialNumber, ics_Manufacturer as Manufacturer, ics_Brand as Brand, ics_SKU as SKU, ics_IpAddress as IpAddress, ics_PortNumber as PortNumber, ics_LoginName as LoginName, ics_Password as Password, ics_AssemblyName as AssemblyName, ics_AssemblyPath as AssemblyPath, ics_ClassName as ClassName, ics_Version as Version, ics_Remarks as Remarks ,ics_order as 'order' FROM tb_mon_InstrumentCameraSettings WHERE Ins_InstrumentID = @InstrumentID AND ics_order = 2;";

        public static string SQL_CMD_InsertInstrument = "INSERT INTO instruments (Name, Alias, Type, Model, SerialNumber, Manufacturer, Brand, SKU, WarrantyPeriod, ShipmentDate, PurchaseDate, Remarks) VALUES (@Name, @Alias, @Type, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @WarrantyPeriod, @ShipmentDate, @PurchaseDate, @Remarks);";
        public static string SQL_CMD_UpdateInstrument = "UPDATE instruments SET Name = @Name, Alias = @Alias, Type = @Type, Model = @Model, SerialNumber = @SerialNumber, Manufacturer = @Manufacturer, Brand = @Brand, SKU = @SKU, WarrantyPeriod = @WarrantyPeriod, ShipmentDate = @ShipmentDate, PurchaseDate =@PurchaseDate, Remarks = @Remarks WHERE ID = @ID;";
        public static string SQL_CMD_UpdateInstrumentInstallation = "UPDATE instruments SET Latitude = @Latitude, Longitude = @Longitude, Location = @Location, InstallationDate = @InstallationDate, AcceptanceDate = @AcceptanceDate WHERE ID = @ID;";
        public static string SQL_CMD_UpdateInstrumentDistribution = "UPDATE instruments SET Organization = @Organization, Department = @Department, WorkGroup = @WorkGroup WHERE ID = @ID;";
        public static string SQL_CMD_DeleteInstrument = "DELETE FROM instruments WHERE ID = @ID;";
        public static string SQL_CMD_SelectInstrumentBasicById = "SELECT ID as ID, Name as Name, Alias as Alias, Type as Type, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, WarrantyPeriod as WarrantyPeriod, ShipmentDate as ShipmentDate, PurchaseDate as PurchaseDate, Remarks as Remarks FROM instruments WHERE ID = @ID;";
        public static string SQL_CMD_SelectInstrumentById = "SELECT ID as ID, Name as Name, Alias as Alias, Type as Type, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, Latitude as Latitude, Longitude as Longitude, Location as Location, WarrantyPeriod as WarrantyPeriod, ShipmentDate as ShipmentDate, PurchaseDate as PurchaseDate, InstallationDate as InstallationDate, AcceptanceDate as AcceptanceDate, Organization as Organization, Department as Department, WorkGroup as WorkGroup, Remarks as Remarks FROM instruments WHERE ID = @ID;";
        public static string SQL_CMD_InsertInstrumentCommunicationSetting = "INSERT INTO InstrumentCommnunicationSettings (InstrumentID, Type, IpAddress, PortNumber, SerialPortName, SerialPortBaudRate, BluetoothDeviceName, BluetoothAddress, BluetoothKey, Protocol, AssemblyName, AssemblyPath, ClassName, Version) VALUES (@InstrumentID, @Type, @IpAddress, @PortNumber, @SerialPortName, @SerialPortBaudRate, @BluetoothDeviceName, @BluetoothAddress, @BluetoothKey, @Protocol, @AssemblyName, @AssemblyPath, @ClassName, @Version);";
        public static string SQL_CMD_UpdateInstrumentCommunicationSetting = "UPDATE InstrumentCommnunicationSettings SET Type = @Type, IpAddress = @IpAddress, PortNumber = @PortNumber, SerialPortName = @SerialPortName, SerialPortBaudRate = @SerialPortBaudRate, BluetoothDeviceName = @BluetoothDeviceName, BluetoothAddress = @BluetoothAddress, BluetoothKey = @BluetoothKey, Protocol = @Protocol, AssemblyName = @AssemblyName, AssemblyPath = @AssemblyPath, ClassName = @ClassName, Version = @Version WHERE InstrumentID = @InstrumentID;";
        public static string SQL_CMD_DeleteInstrumentCommunicationSetting = "DELETE FROM InstrumentCommnunicationSettings WHERE ID = @ID;";
        public static string SQL_CMD_SelectInstrumentCommunicationSettingById = "SELECT ID as ID, InstrumentID as InstrumentID, Type as Type, IpAddress as IpAddress, PortNumber as PortNumber, SerialPortName as SerialPortName, SerialPortBaudRate as SerialPortBaudRate, BluetoothDeviceName as BluetoothDeviceName, BluetoothAddress as BluetoothAddress, BluetoothKey as BluetoothKey, Protocol as Protocol, AssemblyName as AssemblyName, AssemblyPath as AssemblyPath, ClassName as ClassName, Version as Version, Remarks as Remarks FROM InstrumentCommnunicationSettings WHERE InstrumentID = @InstrumentID;";
        public static string SQL_CMD_InsertInstrumentCameraSetting = "INSERT INTO InstrumentCameraSettings (InstrumentID, CameraType, ConnectionType, Model, SerialNumber, Manufacturer, Brand, SKU, IpAddress, PortNumber, LoginName, Password, AssemblyName, AssemblyPath, ClassName, Version,Index) VALUES (@InstrumentID, @CameraType, @ConnectionType, @Model, @SerialNumber, @Manufacturer, @Brand, @SKU, @IpAddress, @PortNumber, @LoginName, @Password, @AssemblyName, @AssemblyPath, @ClassName, @Version,@Index);";
        public static string SQL_CMD_UpdateInstrumentCameraSetting = "UPDATE InstrumentCameraSettings SET CameraType = @CameraType, ConnectionType = @ConnectionType, Model = @Model, SerialNumber = @SerialNumber, Manufacturer = @Manufacturer, Brand = @Brand, SKU = @SKU, IpAddress = @IpAddress, PortNumber = @PortNumber, LoginName = @LoginName, Password = @Password, AssemblyName = @AssemblyName, AssemblyPath = @AssemblyPath, ClassName = @ClassName, Version = @Version,Index = @Index WHERE InstrumentID = @InstrumentID AND Index = @Index;";
        public static string SQL_CMD_DeleteInstrumentCameraSetting = "DELETE FROM InstrumentCameraSettings WHERE ID = @ID;";
        public static string SQL_CMD_SelectInstrumentCameraSettingById = "SELECT ID as ID, InstrumentID as InstrumentID, CameraType as CameraType, ConnectionType as ConnectionType, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, IpAddress as IpAddress, PortNumber as PortNumber, LoginName as LoginName, Password as Password, AssemblyName as AssemblyName, AssemblyPath as AssemblyPath, ClassName as ClassName, Version as Version, Remarks as Remarks, Index as 'Index' FROM InstrumentCameraSettings WHERE InstrumentID = @InstrumentID;";
        public static string SQL_CMD_SelectMaxInstrumentID = "SELECT MAX(ID) FROM instruments";
        public static string SQL_CMD_SelectMaxInstrumentCommunicationSettingID = "SELECT MAX(ID) FROM InstrumentCommnunicationSettings";
        public static string SQL_CMD_SelectMaxInstrumentCameraSettingID = "SELECT MAX(ID) FROM InstrumentCameraSettings";
        public static string SQL_CMD_SelectInstruments = "SELECT ID as ID, Name as Name, Alias as Alias, Type as Type, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, Latitude as Latitude, Longitude as Longitude, Location as Location, WarrantyPeriod as WarrantyPeriod, ShipmentDate as ShipmentDate, PurchaseDate as PurchaseDate, InstallationDate as InstallationDate, AcceptanceDate as AcceptanceDate, Organization as Organization, Department as Department, WorkGroup as WorkGroup, Remarks as Remarks FROM instruments";
        public static string SQL_CMD_SelectDateTableInstrumentCamera = "SELECT ID as ID,Name as Name,SerialNumber as SerialNumber FROM instruments";
        public static string SQL_CMD_DeleteInstrumentCamera = "DELETE FROM InstrumentCameraSettings WHERE InstrumentID = @InstrumentID;";
        public static string SQL_CMD_DeleteInstrumentCommunication = "DELETE FROM InstrumentCommnunicationSettings WHERE InstrumentID = @InstrumentID;";
        public static string SQL_CMD_SelectInstrumentCountByName = "SELECT COUNT(*) FROM instruments WHERE Name = @Name AND ID != @ID";
        public static string SQL_CMD_SelectInstrumentCameraSettingById1 = "SELECT ID as ID, InstrumentID as InstrumentID, CameraType as CameraType, ConnectionType as ConnectionType, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, IpAddress as IpAddress, PortNumber as PortNumber, LoginName as LoginName, Password as Password, AssemblyName as AssemblyName, AssemblyPath as AssemblyPath, ClassName as ClassName, Version as Version, Remarks as Remarks ,Index as 'Index' FROM InstrumentCameraSettings WHERE InstrumentID = @InstrumentID AND Index = 1;";
        public static string SQL_CMD_SelectInstrumentCameraSettingById2 = "SELECT ID as ID, InstrumentID as InstrumentID, CameraType as CameraType, ConnectionType as ConnectionType, Model as Model, SerialNumber as SerialNumber, Manufacturer as Manufacturer, Brand as Brand, SKU as SKU, IpAddress as IpAddress, PortNumber as PortNumber, LoginName as LoginName, Password as Password, AssemblyName as AssemblyName, AssemblyPath as AssemblyPath, ClassName as ClassName, Version as Version, Remarks as Remarks ,Index as 'Index' FROM InstrumentCameraSettings WHERE InstrumentID = @InstrumentID AND Index = 2;";
    }
}
